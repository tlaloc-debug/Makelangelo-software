name: Java CI with Maven

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-java@v4.2.1
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'maven'

    - name: Build and Test with Maven
      timeout-minutes: 15
      run: ./mvnw -B verify

    # - name: Get JaCoCo Coverage
    #   id: coverage  
    #   run: |
    #     coverage=$(python3 config/coverage.py target/site/jacoco/jacoco.csv) 
    #     echo "COVERAGE=$coverage" >> $GITHUB_ENV

    # - name: Fail if coverage has not improved.
    #   run: |
    #     coverage=$COVERAGE
    #     threshold=24.46
    #     if (( $(echo "$coverage - $threshold <= 0.1" | bc -l) )); then
    #       echo "Coverage is not improved."
    #       exit 1
    #     else
    #       echo "New coverage: $coverage%. Coverage is improved!"
    #     fi

          ### RAM TEST    
          
    # - name: Run build with MaxRAM flag
    #   run: |
    #     export MAVEN_OPTS="-XX:MaxRAM=2g"  # Set MaxRAM flag
    #     mvn clean install  # Run Maven build
        
    # # Check if the compilation was successful with 2GB RAM
    # - name: Check if build was successful with 2GB RAM
    #   if: success()  
    #   run: echo "The build with 2GB RAM was successful."

    # # Check error
    # - name: Handle failure
    #   if: failure()  
    #   run: echo "Build with 2GB RAM failed."

          ### Ratio of heap USE
          
    # - name: flag
    #   run: |
    #     export MAVEN_OPTS="-Xlog:gc*:file=gc.log"  
    #     mvn clean install  # Run Maven build

    # - name: Ejecutar script de Bash para obtener GC Info
    #   run: |
    #     chmod +x ./search_gc_info.sh
    #     ./search_gc_info.sh

          #### CACHE TEST
          
    # - name: Run build with Cahce flag
    #   run: |
    #     export MAVEN_OPTS="-XX:ReservedCodeCacheSize=1024M"  
    #     mvn clean install  # Run Maven build
            
    # # Check if the compilation was successful with 1024M Cache
    # - name: Check if build was successful with 1024M Cache
    #   if: success()  
    #   run: echo "The build with 1024M Cache was successful."

    # # Check error
    # - name: Handle failure
    #   if: failure()  
    #   run: echo "Build with 1024M Cache failed."

          ### 64 vs 32 bits
    
    # First run with 1024M cache size
    - name: Run build with 1024M Cache flag
      run: |
        export MAVEN_OPTS="-XX:+UnlockDiagnosticVMOptions -XX:MallocMaxTestWords=1024M"
        mvn clean install 
        echo "success" > results.log || echo "failure" > results.log
      continue-on-error: true

    # Second run with 64M Words (half)
    - name: Run build with 64M Words flag
      run: |
        export MAVEN_OPTS="-XX:+UnlockDiagnosticVMOptions -XX:MallocMaxTestWords=512M"
        mvn clean install 
        echo "success" >> results.log || echo "failure" >> results.log
      continue-on-error: true

    - name: Check build results and print conclusion
      run: |
        chmod +x check_results.sh  
        ./check_results.sh         
