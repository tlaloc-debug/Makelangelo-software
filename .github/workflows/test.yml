name: Java CI with Maven

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-java@v4.2.1
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'maven'

    - name: Build and Test with Maven
      timeout-minutes: 15
      run: ./mvnw -B verify

    - name: Get JaCoCo Coverage
      id: coverage  
      run: |
        coverage=$(python3 config/coverage.py target/site/jacoco/jacoco.csv) 
        echo "COVERAGE=$coverage" >> $GITHUB_ENV

    - name: Fail if coverage has not improved.
      run: |
        coverage=$COVERAGE
        threshold=24.46
        if (( $(echo "$coverage - $threshold <= 0.1" | bc -l) )); then
          echo "Coverage is not improved."
          exit 1
        else
          echo "New coverage: $coverage%. Coverage is improved!"
        fi

    ### ========== TEST NUM 1 RAM TEST   ==========  
          
    - name: Run build with MaxRAM flag
      run: |
        export MAVEN_OPTS="-XX:MaxRAM=2g"  # Set MaxRAM flag
        mvn clean install  # Run Maven build
        
    # Check if the compilation was successful with 2GB RAM
    - name: Check if build was successful with 2GB RAM
      if: success()  
      run: echo "The build with 2GB RAM was successful."

    # Check error
    - name: Handle failure
      if: failure()  
      run: echo "Build with 2GB RAM failed."

    ### ========== TEST NUM 2 HEAP  USE   ========== 
          
    - name: Run build to get Garbage Collector information
      run: |
        export MAVEN_OPTS="-Xlog:gc*:file=gc.log"  # Get GC information 
        mvn clean install  # Run Maven build

    - name: Run Bash Script to Get GC Info
      run: |
        chmod +x ./tests_scripts/search_gc_info.sh
        ./tests_scripts/search_gc_info.sh

    ### ========== TEST NUM 3 CACHE TEST   ========== 
          
    - name: Run build with Max Cahce flag
      run: |
        export MAVEN_OPTS="-XX:ReservedCodeCacheSize=1024M"  
        mvn clean install  # Run Maven build
            
    # Check if the compilation was successful with 1024M Cache
    - name: Check if build was successful with 1024M Cache
      if: success()  
      run: echo "The build with 1024M Cache was successful."

    # Check error
    - name: Handle failure
      if: failure()  
      run: echo "Build with 1024M Cache failed."

    ### ========== TEST NUM 4 64 vs 32 bits architecture   ========== 
    
    # First run with 1024M Words (64 bits)
    - name: Run build with 1024M Words flag
      run: |
        export MAVEN_OPTS="-XX:+UnlockDiagnosticVMOptions -XX:MallocMaxTestWords=1024M"
        mvn clean install 
        echo "success" > results.log || echo "failure" > results.log                                  # Save results on file
        echo "The build with 1024M Words was successful." || echo "Build with 1024M Words failed."    # Show results on screen
      continue-on-error: true

    # Second run with 64M Words (half)
    - name: Run build with 512M Words flag
      run: |
        export MAVEN_OPTS="-XX:+UnlockDiagnosticVMOptions -XX:MallocMaxTestWords=512M"
        mvn clean install 
        echo "success" > results.log || echo "failure" > results.log                                  # Save results on file
        echo "The build with 512M Words was successful." || echo "Build with 512M Words failed."    # Show results on screen
      continue-on-error: true

    - name: Check build results and print conclusion
      run: |
        chmod +x ./tests_scripts/check_results.sh  
        ./tests_scripts/check_results.sh         
